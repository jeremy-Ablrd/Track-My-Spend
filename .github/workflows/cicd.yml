name: CI/CD Pipeline main

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    # services:
    #   postgres:
    #     image: postgres:16  # Version PostgreSQL
    #     env:
    #       POSTGRES_USER: jerem
    #       POSTGRES_PASSWORD: admin
    #       POSTGRES_DB: trackmyspend
    #     ports:
    #       - 5432:5432
    #     options: >-
    #       --health-cmd "pg_isready -U jerem"
    #       --health-interval 10s
    #       --health-timeout 5s
    #       --health-retries 5
    

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Configurer JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # OpenJDK Temurin
          java-version: '17'

      - name: Vérifier la version de Java
        run: java -version

      # Démarrer les services via Docker Compose
      - name: Démarrer PostgreSQL avec Docker Compose
        run: |
          docker-compose -f docker-compose.yml up -d

      - name: Attendre que PostgreSQL soit prêt
        run: |
          until pg_isready -h localhost -U jerem; do
            echo "PostgreSQL n'est pas encore prêt. Nouvelle tentative..."
            sleep 5
          done
        env:
          PGPASSWORD: admin

      - name: Construire le projet avec Maven
        env:
          POSTGRES_HOST: postgres
          SPRING_DATASOURCE_USERNAME: jerem
          SPRING_DATASOURCE_PASSWORD: admin
          POSTGRES_PORT: 5432
        run: mvn clean package