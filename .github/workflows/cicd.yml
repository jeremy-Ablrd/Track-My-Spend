name: CI/CD Pipeline main

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  test:
    name: Run Tests with PostgreSQL
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: jerem
          POSTGRES_PASSWORD: admin
          POSTGRES_DB: trackmyspend
        options: --health-cmd="pg_isready -U jerem" --health-timeout=30s --health-retries=3

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Wait for PostgreSQL to be ready
        run: |
          until nc -z postgres 5432; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 3
          done

      - name: Set up environment variables
        run: |
          echo "DB_URL=jdbc:postgresql://postgres:5432/trackmyspend" >> $GITHUB_ENV
          echo "DB_USERNAME=jerem" >> $GITHUB_ENV
          echo "DB_PASSWORD=admin" >> $GITHUB_ENV

      - name: Run tests
        run: mvn clean test -Dspring.profiles.active=test

  build:
    name: Build Application
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Maven
        run: mvn clean compile

  package:
    name: Package Application
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Package Application
        run: mvn clean package

  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest
    needs: package
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Get the commit message
        id: commit_message
        run: echo "COMMIT_MESSAGE=$(git log -1 --pretty=%B)" >> $GITHUB_ENV

      - name: Build Docker image
        run: |
          docker build -t splinter2525/trackmyspend-backend:${{ env.COMMIT_MESSAGE }} .

      - name: Push Docker image to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker tag splinter2525/trackmyspend-backend:${{ env.COMMIT_MESSAGE }} splinter2525/trackmyspend-backend:${{ env.COMMIT_MESSAGE }}
          docker push splinter2525/trackmyspend-backend:${{ env.COMMIT_MESSAGE }}

      - name: Deploy to server
        run: |
          ssh user@mon-serveur "docker pull splinter2525/trackmyspend-backend:${{ env.COMMIT_MESSAGE }} && docker stop trackmyspend-backend || true && docker run -d --rm --name trackmyspend-backend -p 8080:8080 splinter2525/trackmyspend-backend:${{ env.COMMIT_MESSAGE }}"
